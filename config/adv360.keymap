#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include "./zmk-nodefree-config/helper.h"
#include "macros.h"

#define ___ &trans

#define KEYS_L 0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 46 47 48 49 50 51 60 61 62 63 64

#define THUMBS_LEFT 35 36 52 65 66 67

#define KEYS_R 7 8 9 10 11 12 13 21 22 23 24 25 26 27 39 40 41 42 43 44 45 54 55 56 57 58 59 71 72 73 74 75

#define THUMBS_RIGHT 37 38 53 68 69 70

#define NAVI 63 64 71 72

#define QWERTY 0
#define HRM 1
#define KEYPAD 2
#define FN 3
#define MOD 4
#define GAME 5
#define IRIS 6

/* left-hand HRMs */
ZMK_BEHAVIOR(hml, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS_LEFT THUMBS_RIGHT NAVI>;
    hold-trigger-on-release;
)

/* right-hand HRMs */
ZMK_BEHAVIOR(hmr, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS_LEFT THUMBS_RIGHT NAVI>;
    hold-trigger-on-release;
)

IRIS_MACRO(iris_lam, N0, N3, B, B)
IRIS_MACRO(iris_cdot, N2, N2, C, N5)
IRIS_MACRO(iris_vdash, N2, N2, A, N2)
IRIS_MACRO(iris_valid, N2, N7, N1, N3)
IRIS_MACRO(iris_later, N2, N5, B, N7)
IRIS_MACRO(iris_phi, N0, N3, C, N6)
IRIS_MACRO(iris_and, N2, N2, N2, N7)
IRIS_MACRO(iris_or, N2, N2, N2, N8)
IRIS_MACRO(iris_forall, N2, N2, N0, N0)
IRIS_MACRO(iris_exists, N2, N2, N0, N3)
IRIS_MACRO(iris_to, N2, N1, N9, N2)
IRIS_MACRO(iris_sep, N2, N2, N1, N7)
IRIS_MACRO(iris_lc, N2, N3, N1, C)
IRIS_MACRO(iris_rc, N2, N3, N1, D)
IRIS_MACRO(iris_empty, N2, N2, N0, N5)
IRIS_MACRO(iris_setminus, N2, N2, N1, N6)
IRIS_MACRO(iris_auth, N2, N5, C, F)
IRIS_MACRO(iris_frag, N2, N5, E, F)
IRIS_MACRO(iris_gname, N0, N3, B, N3)
IRIS_MACRO(iris_incl, N2, N2, N7, C)

/ {
    behaviors {
      #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO
      macro_ver: macro_ver {
        compatible = "zmk,behavior-macro";
        label = "macro_version";
        #binding-cells = <0>;
        bindings = <&kp RET>;
      };
      #endif
    };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp EQUAL &kp N1    &kp N2   &kp N3   &kp N4     &kp N5 &tog KEYPAD                                              &mo MOD &kp N6 &kp N7    &kp N8    &kp N9   &kp N0   &kp MINUS
        &kp TAB   &kp Q     &kp W    &kp E    &kp R      &kp T  &tog GAME                                                &to HRM &kp Y  &kp U     &kp I     &kp O    &kp P    &kp BSLH
        &kp ESC   &kp A     &kp S    &kp D    &kp F      &kp G  &to  QWERTY    &kp LCTRL &kp LALT &kp LGUI  &kp RCTRL    &none   &kp H  &kp J     &kp K     &kp L    &kp SEMI &kp SQT
        &kp LSHFT &kp Z     &kp X    &kp C    &kp V      &kp B                           &kp HOME &kp PG_UP                      &kp N  &kp M     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
        &mo FN    &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT               &kp BSPC &kp DEL   &kp END  &kp PG_DN &kp ENTER &kp SPACE         &kp UP    &kp DOWN  &kp LBKT &kp RBKT &mo FN
      >;
    };

    home_row_mods {
      bindings = <
        ___ ___         ___         ___          ___          ___ ___                          ___ ___ ___          ___          ___         ___            ___
        ___ ___         ___         ___          ___          ___ ___                          ___ ___ ___          ___          ___         ___            ___
        ___ &hml LGUI A &hml LALT S &hml LSHFT D &hml LCTRL F ___ ___    ___ ___    ___ ___    ___ ___ &hmr LCTRL J &hmr RSHFT K &hmr LALT L &hmr LGUI SEMI ___
        ___ ___         ___         ___          ___          ___            ___    ___            ___ ___          ___          ___         ___            ___
        ___ ___         &mo  IRIS   ___          ___                 ___ ___ ___    ___ ___ ___        ___          ___          ___         ___            ___
      >;
    };

    keypad {
      bindings = <
        ___ ___ ___ ___ ___ ___ ___                          ___ ___ &kp KP_NUM &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY ___
        ___ ___ ___ ___ ___ ___ ___                          ___ ___ &kp KP_N7  &kp KP_N8    &kp KP_N9     &kp KP_MINUS    ___
        ___ ___ ___ ___ ___ ___ ___    ___ ___    ___ ___    ___ ___ &kp KP_N4  &kp KP_N5    &kp KP_N6     &kp KP_PLUS     ___
        ___ ___ ___ ___ ___ ___            ___    ___            ___ &kp KP_N1  &kp KP_N2    &kp KP_N3     &kp KP_ENTER    ___
        ___ ___ ___ ___ ___        ___ ___ ___    ___ ___ ___        &kp KP_N0  ___          &kp KP_DOT    ___             ___
      >;
    };

    fn {
      bindings = <
        &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 ___                          ___ &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
        ___    ___    ___    ___    ___    ___    ___                          ___ ___    ___    ___    ___     ___     ___
        ___    ___    ___    ___    ___    ___    ___    ___ ___    ___ ___    ___ ___    ___    ___    ___     ___     ___
        ___    ___    ___    ___    ___    ___               ___    ___            ___    ___    ___    ___     ___     ___
        ___    ___    ___    ___    ___              ___ ___ ___    ___ ___ ___           ___    ___    ___     ___     ___
      >;
    };

    mod {
      bindings = <
        &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                     ___         &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &bootloader                                               &bootloader &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &rgb_ug RGB_MEFS_CMD 5    &none &none &bt BT_CLR &none    &none       &none        &none        &none        &none &none &none
        &none &none        &none        &none        &macro_ver   &none                                        &none &none                           &none        &none        &none        &none &none &none
        &none &none        &none        &bl BL_DEC   &bl BL_INC                                    &none &none &none &none      &bl BL_TOG &rgb_ug RGB_TOG        &none        &none        &none &none &none
      >;
    };

    game {
      bindings = <
        ___      ___ ___ ___ ___ ___ ___                                           ___ ___ ___ ___ ___ ___ ___
        ___      ___ ___ ___ ___ ___ ___                                           ___ ___ ___ ___ ___ ___ ___
        ___      ___ ___ ___ ___ ___ ___                ___ ___    ___ ___         ___ ___ ___ ___ ___ ___ ___
        ___      ___ ___ ___ ___ ___                        ___    ___                 ___ ___ ___ ___ ___ ___
        &kp LALT ___ ___ ___ ___        &kp LCTRL &kp SPACE ___    ___ ___ &kp BSPC        ___ ___ ___ ___ ___
      >;
    };

    iris {
      bindings = <
        ___ ___ ___         ___          ___          ___         ___                          ___ &iris_and &iris_or &iris_sep   &iris_lc   &iris_rc  &iris_vdash
        ___ ___ ___         &iris_exists ___          ___         ___                          ___ ___       ___      &iris_auth  &iris_frag &iris_phi &iris_setminus
        ___ ___ ___         ___          &iris_forall &iris_gname ___    ___ ___    ___ ___    ___ ___       ___      ___         &iris_lam  ___       ___
        ___ ___ &iris_empty ___          &iris_valid  ___                    ___    ___            ___       ___      &iris_incl  &iris_cdot ___       ___
        ___ ___ ___         ___          &iris_to                    ___ ___ ___ ___ ___ ___                 ___      &iris_later ___        ___       ___
      >;
    };
  };
};
